<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.system1.dao.BookDao">
    <insert id="save" parameterType="com.bootdo.system1.domain.BookDo" useGeneratedKeys="true" keyProperty="bookId">
        INSERT INTO book ( book_name, STATUS, book_desc, gmt_grounding ,gmt_update)
        VALUES
            ( #{bookName}, #{status}, #{bookDesc},#{gmtGrounding},#{gmtUpdate});
    </insert>

    <update id="update" parameterType="com.bootdo.system1.domain.BookDo">
        update book
        <set>
            <if test="bookName != null">`book_name` = #{bookName},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="bookDesc != null">`book_desc` = #{bookDesc},</if>
            <if test="gmtGrounding != null">`gmt_grounding` = #{gmtGrounding},</if>
            <if test="gmtUpdate != null">`gmt_update` = #{gmtUpdate}</if>
        </set>
        where book_id = #{bookId}
    </update>

    <delete id="remove">
        delete from book where book_id = #{value}
    </delete>

    <delete id="batchRemove">
        delete from book where book_id in
        <foreach collection="array" open="(" separator="," close=")" item="bookId">
            #{bookId}
        </foreach>
    </delete>

    <select id="get" resultType="com.bootdo.system1.domain.BookDo">
		select `book_id`,`book_name`,`gmt_grounding`,`status`,`book_desc`,`gmt_update` from book where book_id = #{value}
	</select>

    <!--<select id="list" resultType="com.bootdo.system1.domain.BookDo">
        select
        'book_name','status','book_desc','gmt_grounding','gmt_update'
        from book
        <where>
            <if test="bookName != null">`book_name` = #{bookName},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="bookDesc != null">`book_desc` = #{bookDesc},</if>
            <if test="gmtGrounding != null">`gmt_grounding` = #{gmtGrounding},</if>
            <if test="gmtUpdate != null">`gmt_update` = #{gmtUpdate}</if>
        </where>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>-->

    <select id="list" resultType="com.bootdo.system1.domain.BookDo">
        select `book_id`,`book_name`,`gmt_grounding`,`status`,`book_desc`,`gmt_update` from book
        <where>
            <if test="bookId != null and bookId != ''">and book_id = #{bookId}</if>
            <if test="bookName != null and bookName != ''">and book_name = #{bookName}</if>
            <if test="gmtGrounding != null and gmtGrounding != ''">and gmt_grounding = #{gmtGrounding}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="bookDesc != null and bookDesc != ''">and book_desc = #{bookDesc}</if>
            <if test="gmtUpdate != null and gmtUpdate != ''">and gmt_update = #{gmtUpdate}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by book_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from book
        <where>
            <if test="bookId != null and bookId != ''">and book_id = #{bookId}</if>
            <if test="bookName != null and bookName != ''">and book_name = #{bookName}</if>
            <if test="gmtGrounding != null and gmtGrounding != ''">and gmt_grounding = #{gmtGrounding}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="bookDesc != null and bookDesc != ''">and book_desc = #{bookDesc}</if>
            <if test="gmtUpdate != null and gmtUpdate != ''">and gmt_update = #{gmtUpdate}</if>
        </where>
    </select>
</mapper>